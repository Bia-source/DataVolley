// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Athlete {
  id_athlete          String        @id @default(uuid())
  name                String
  number              Int
  height              Int
  age                 Int
  position            POSITION
  id_category_athlete String?
  categories          Category[]
  squads              Squads[]
  id_team             String
  team                Team          @relation(fields: [id_team], references: [id_team])
  emplacement         Emplacement[]

  @@map("athletes")
}

model Category {
  id_category    String     @id @default(uuid())
  classification CATEGORIES
  id_team        String
  team           Team       @relation(fields: [id_team], references: [id_team])
  genre          GENRE
  id_athletes    String[]
  athletes       Athlete[]
  squads         Squads[]

  @@map("category")
}

model Squads {
  id_squad    String        @id @default(uuid())
  id_category String
  category    Category      @relation(fields: [id_category], references: [id_category])
  genre       String
  athletes    Athlete[]
  team        Team          @relation(fields: [id_team], references: [id_team])
  id_team     String
  set         Set[]
  game        Game[]
  emplacement Emplacement[]

  @@map("squads")
}

model Team {
  id_team   String     @id @default(uuid())
  name      String     @unique
  id_adm    String
  squads    Squads[]
  athletes  Athlete[]
  categorys Category[]
  games     Game[]

  @@map("team")
}

model Set {
  id_set              String        @id @default(uuid())
  id_first_squad      String
  id_second_squad     String
  squads              Squads        @relation(fields: [id_first_squad], references: [id_squad])
  set_number          Int
  id_game             String
  game                Game          @relation(fields: [id_game], references: [id_game])
  points_first_squad  Int
  points_second_squad Int
  created_at          DateTime
  end_at              DateTime
  emplacement         Emplacement[]

  @@map("set")
}

model Emplacement {
  id_emplacement String      @id @default(uuid())
  stars          STARS
  id_athlete     String
  athlete        Athlete     @relation(fields: [id_athlete], references: [id_athlete])
  type_pass      TYPE_PASS?
  type_point     TYPE_POINT?
  zone           ZONE?
  id_squad       String
  squad          Squads      @relation(fields: [id_squad], references: [id_squad])
  id_set         String
  set            Set         @relation(fields: [id_set], references: [id_set])

  @@map("emplacement")
}

model Game {
  id_game          String  @id @default(uuid())
  numberSets       Int
  id_winner        String?
  set              Set[]
  id_first_team    String
  id_second_team   String
  name_second_team String
  team             Team    @relation(fields: [id_first_team], references: [id_team])
  Squads           Squads? @relation(fields: [squadsId_squad], references: [id_squad])
  squadsId_squad   String?

  @@map("game")
}

enum STARS {
  A
  B
  C
  D
}

enum ZONE {
  PARALELA
  PARAGONAL
  DIAGONAL_LONGA
  DIAGONAL_CURTA
}

enum TYPE_POINT {
  LARGADA
  ATTACK
  BLOCK
  ACE
  OPPONENT_ERROR
}

enum TYPE_PASS {
  SERVE
  LARGADA
  DEFENSE
}

enum POSITION {
  LEVANTADOR
  PONTEIRO
  OPOSTO
  LIBERO
  CENTRAL
}

enum CATEGORIES {
  SUB_15
  SUB_17
  SUB_19
  SUB_21
  ADULTO
}

enum GENRE {
  FEM
  MASC
}
